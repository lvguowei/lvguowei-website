<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android Programming on Guowei Lv</title>
    <link>https://www.lvguowei.me/categories/android-programming/</link>
    <description>Recent content in Android Programming on Guowei Lv</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Jul 2017 17:13:32 +0300</lastBuildDate>
    
	<atom:link href="https://www.lvguowei.me/categories/android-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rxjava fromCallable() Vs defer()</title>
      <link>https://www.lvguowei.me/post/rxjava-fromcallable-vs-defer/</link>
      <pubDate>Tue, 11 Jul 2017 17:13:32 +0300</pubDate>
      
      <guid>https://www.lvguowei.me/post/rxjava-fromcallable-vs-defer/</guid>
      <description>In this post we talk about how to use Observable.fromCallable() and Observable.defer() to convert exising functionality into the Rx.
Imagine that you have a UserService class, in it there is a getUserFromDb() function. This function is developed before RxJava and cannot be changed. But somehow you need a function which returns a Observable&amp;lt;User&amp;gt;. What could you do?
The UserService Example public class UserService { /** * Gets User from database, this should not be run in UI thread.</description>
    </item>
    
  </channel>
</rss>