<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpp on Guowei Lv</title>
    <link>https://www.lvguowei.me/tags/cpp/</link>
    <description>Recent content in Cpp on Guowei Lv</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 May 2016 20:46:45 +0300</lastBuildDate>
    
	<atom:link href="https://www.lvguowei.me/tags/cpp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Old and New For Loop in C&#43;&#43;</title>
      <link>https://www.lvguowei.me/post/new-and-old-for-loop/</link>
      <pubDate>Sun, 15 May 2016 20:46:45 +0300</pubDate>
      
      <guid>https://www.lvguowei.me/post/new-and-old-for-loop/</guid>
      <description>The difference between the subscription based for loop and the newly introduced range based loop may be a bit confusing. Let&amp;rsquo;s clear things up.
Here are some sample code:
void testFor() { cout &amp;lt;&amp;lt; &amp;quot;--- For loop ---&amp;quot; &amp;lt;&amp;lt; endl; string s(&amp;quot;hello&amp;quot;); // subscription can modify for (string::size_type i = 0; i &amp;lt; s.size (); i++) { s[i] = toupper (s[i]); } cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl; vector&amp;lt;int&amp;gt; v {1, 2, 3}; // subscription can modify for (vector&amp;lt;int&amp;gt;::size_type i = 0; i &amp;lt; v.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; Primer Answers</title>
      <link>https://www.lvguowei.me/post/c&#43;&#43;-primer-answers/</link>
      <pubDate>Sat, 30 Apr 2016 10:07:07 +0300</pubDate>
      
      <guid>https://www.lvguowei.me/post/c&#43;&#43;-primer-answers/</guid>
      <description>Table of Contents  1. C++ Primer Exercises Answers  1.1. Section 2.3.1  1.1.1. Exercise 2.15 1.1.2. Exercise 2.16 1.1.3. Exercise 2.17   1.2. Section 2.3.2  1.2.1. Exercise 2.18 1.2.2. Exercise 2.20 1.2.3. Exercise 2.21   1.3. Section 2.4.2  1.3.1. Exercise 2.27   1.4. Section 2.4.3  1.4.1. Exercise 2.30        C++ Primer Exercises Answers Section 2.3.1 Exercise 2.</description>
    </item>
    
  </channel>
</rss>