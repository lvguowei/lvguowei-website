<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lambda on Guowei Lv</title>
    <link>https://www.lvguowei.me/tags/lambda/</link>
    <description>Recent content in Lambda on Guowei Lv</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Jul 2017 12:01:35 +0300</lastBuildDate>
    
	<atom:link href="https://www.lvguowei.me/tags/lambda/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Strategy Pattern And Lambda</title>
      <link>https://www.lvguowei.me/post/strategy-pattern-and-lambda/</link>
      <pubDate>Mon, 03 Jul 2017 12:01:35 +0300</pubDate>
      
      <guid>https://www.lvguowei.me/post/strategy-pattern-and-lambda/</guid>
      <description>While reading Effective Java Item 21: Use function objects to represent strategies, something hit my mind and now I&amp;rsquo;m writing it down.
All these new lambda thing is really what is called the Strategy pattern in the OOP world, or would it be more appropriate to say that the Strategy Pattern in Design patterns is really what lambda is.
The essence of all these, can be boiled down to one simple idea, pass functionalities around.</description>
    </item>
    
  </channel>
</rss>